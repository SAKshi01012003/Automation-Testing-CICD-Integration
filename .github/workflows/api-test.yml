# api-test.yml
name: API Testing

on:
  workflow_dispatch:
    inputs:
      api_url:
        description: 'API Endpoint URL'
        required: true
        type: string
      http_method:
        description: 'HTTP Method'
        required: true
        type: choice
        options:
          - GET
          - POST
          - PUT
          - DELETE
      # New authentication inputs
      auth_type:
        description: 'Authentication Type'
        required: true
        type: choice
        options:
          - none
          - Basic
          - OAuth2
      auth_username:
        description: 'Username for Basic Auth'
        required: false
        type: string
      auth_password:
        description: 'Password for Basic Auth'
        required: false
        type: string
      oauth2_token:
        description: 'Access Token for OAuth2'
        required: false
        type: string
      # New optional schema inputs
      input_schema_file:
        description: 'Optional: Path to request schema file (e.g., tests/schemas/request.json)'
        required: false
        type: string
      response_schema_file:
        description: 'Optional: Path to response schema file (e.g., tests/schemas/response.json)'
        required: false
        type: string
      # Other existing inputs
      folder_name:
        description: 'Optional: Specific folder in the collection to run'
        required: false
        type: string
      payload_file:
        description: 'Payload file path (e.g., tests/payloads/data.json)'
        required: false
        type: string

jobs:
  run-api-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Newman and HTML Extra Reporter
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      - name: Run Postman Collection with Newman
        id: run_newman_tests
        run: |
          NEWMAN_CMD="newman run tests/api_collection.json"
          
          # Add folder flag if provided. Using -n check to avoid errors.
          # if [ -n "${{ github.event.inputs.folder_name }}" ]; then
          #   NEWMAN_CMD="${NEWMAN_CMD} --folder \"${{ github.event.inputs.folder_name }}\""
          # fi
          
          # Payload file path is now hardcoded as requested
          # if [ -n "${{ github.event.inputs.payload_file }}" ]; then
          #   NEWMAN_CMD="${NEWMAN_CMD} -d \"${{ github.event.inputs.payload_file }}\""
          # fi
          NEWMAN_CMD="${NEWMAN_CMD} -d tests/payloads/testdata.json "

          
          # Add global variables from user inputs
          # Quotes are used to handle spaces in the string passed to Newman.
          NEWMAN_CMD="${NEWMAN_CMD} --global-var api_url=${{ github.event.inputs.api_url }}"
          # NEWMAN_CMD="${NEWMAN_CMD} --global-var api_url=\"${{ github.event.inputs.api_url }}\""

          NEWMAN_CMD="${NEWMAN_CMD} --global-var http_method=${{ github.event.inputs.http_method }}"
          
          # The correct way to handle auth_type with a space is to quote the variable.
          NEWMAN_CMD="${NEWMAN_CMD} --global-var auth_type=\"${{ github.event.inputs.auth_type }}\""
          
          if [ -n "${{ github.event.inputs.auth_username }}" ]; then
            NEWMAN_CMD="${NEWMAN_CMD} --global-var auth_username=\"${{ github.event.inputs.auth_username }}\""
          fi
          
          if [ -n "${{ github.event.inputs.auth_password }}" ]; then
            NEWMAN_CMD="${NEWMAN_CMD} --global-var auth_password=\"${{ github.event.inputs.auth_password }}\""
          fi
          
          if [ -n "${{ github.event.inputs.oauth2_token }}" ]; then
            NEWMAN_CMD="${NEWMAN_CMD} --global-var oauth2_token=\"${{ github.event.inputs.oauth2_token }}\""
          fi
          
          if [ -n "${{ github.event.inputs.input_schema_file }}" ]; then
            NEWMAN_CMD="${NEWMAN_CMD} --global-var input_schema_file=\"${{ github.event.inputs.input_schema_file }}\""
          fi
          
          if [ -n "${{ github.event.inputs.response_schema_file }}" ]; then
            NEWMAN_CMD="${NEWMAN_CMD} --global-var response_schema_file=\"${{ github.event.inputs.response_schema_file }}\""
          fi
          
          # Print the final command for debugging purposes
          echo "Executing command: ${NEWMAN_CMD}"
          
          # Run the final command
          ${NEWMAN_CMD} --reporters cli,htmlextra --reporter-htmlextra-export results_report.html

      - name: Upload HTML report artifact
        # if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-test-report
          path: results_report.html









# # api-test.yml
# name: API  Testing

# on:
#   push:
#     branches:
#       - main
#     paths:
#       - 'tests/api_collection.json'
#       - 'tests/payloads/**'
#       - 'tests/test_data.json'
#   workflow_dispatch:

# jobs:
#   run-api-tests:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: write
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'

#       - name: Install Newman and HTML Extra Reporter
#         run: |
#           npm install -g newman
#           npm install -g newman-reporter-htmlextra

#       - name: Run Postman Collection with Newman
#         id: run_newman_tests
#         run: |
#           # Use Newman to run the collection and generate the HTML report
#           # The -r flag specifies the reporters: cli (for console output) and htmlextra (for HTML report)
#           # The --reporter-htmlextra-export flag defines the output file path
#       - name: Upload HTML report artifact#            newman run tests/api_collection.json --folder "Response Validation Tests" -d "tests/payloads/testdata.json"  --reporters cli,htmlextra --reporter-htmlextra-export results_report.html      - name: Upload HTML report artifact

#         # This conditional ensures the step always runs
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: api-test-report
#           path: results_report.html

# */


# # api-test.yml
# name: API Testing

# on:
#   # This trigger runs the workflow when files are pushed
#   # push:
#   #   branches:
#   #     - main
#   #   paths:
#   #     - 'tests/api_collection.json'
#   #     - 'tests/payloads/**'
#   #     - 'tests/test_data.json'
  
#   # This trigger allows for manual runs with user inputs
#   workflow_dispatch:
#     inputs:
#       api_url:
#         description: 'API Endpoint URL'
#         required: true
#         type: string
#       http_method:
#         description: 'HTTP Method'
#         required: true
#         type: choice
#         options:
#           - GET
#           - POST
#           - PUT
#           - DELETE
#       auth_config_json:
#         description: 'JSON for Authentication (e.g., { "type": "Bearer", "token": "your_token" })'
#         required: false
#         type: string
#       folder_name:
#         description: 'Optional: Specific folder in the collection to run'
#         required: false
#         type: string


# jobs:
#   run-api-tests:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: write
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'

#       - name: Install Newman and HTML Extra Reporter
#         run: |
#           npm install -g newman
#           npm install -g newman-reporter-htmlextra

#       - name: Run Postman Collection with Newman
#         id: run_newman_tests
#         run: |
#           NEWMAN_CMD="newman run tests/api_collection.json"
          
#           # Add folder flag if provided. Using -n check to avoid errors.
#           if [ -n "${{ github.event.inputs.folder_name }}" ]; then
#             NEWMAN_CMD="${NEWMAN_CMD} --folder \"${{ github.event.inputs.folder_name }}\""
#           fi
          
#           # Payload file path is now hardcoded as requested
#           NEWMAN_CMD="${NEWMAN_CMD} -d \"tests/payloads/testdata.json\""
          
#           # Add global variables from user inputs
#           NEWMAN_CMD="${NEWMAN_CMD} --global-var api_url=${{ github.event.inputs.api_url }}"
#           NEWMAN_CMD="${NEWMAN_CMD} --global-var http_method=${{ github.event.inputs.http_method }}"
          
#           if [ -n "${{ github.event.inputs.auth_config_json }}" ]; then
#             NEWMAN_CMD="${NEWMAN_CMD} --global-var auth_config_json=${{ github.event.inputs.auth_config_json }}"
#           fi

#           echo "Executing command: ${NEWMAN_CMD}"

#           # Run the final command
#           ${NEWMAN_CMD} --reporters cli,htmlextra --reporter-htmlextra-export results_report.html

#       - name: Upload HTML report artifact
#         # This conditional ensures the step always runs
#         # if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: api-test-report
#           path: results_report.html





# # ***************************************************************************8 api-test.yml
# name: API Testing

# on:
#   # This trigger allows for manual runs with user inputs
#   # The push trigger has been removed as requested
#   workflow_dispatch:
#     inputs:
#       api_url:
#         description: 'API Endpoint URL'
#         required: true
#         type: string
#       http_method:
#         description: 'HTTP Method'
#         required: true
#         type: choice
#         options:
#           - GET
#           - POST
#           - PUT
#           - DELETE
#       username:
#         description: 'Username for Basic Authentication'
#         required: false
#         type: string
#       password:
#         description: 'Password for Basic Authentication'
#         required: false
#         type: string
#       # folder_name:
#       #   description: 'Optional: Specific folder in the collection to run'
#       #   required: false
#       #   type: string

# jobs:
#   run-api-tests:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: write
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'

#       - name: Install Newman and HTML Extra Reporter
#         run: |
#           npm install -g newman
#           npm install -g newman-reporter-htmlextra

#       - name: Run Postman Collection with Newman
#         id: run_newman_tests
#         run: |
#           NEWMAN_CMD="newman run tests/api_collection.json"
#           # NEWMAN_CMD="newman run \"tests/api_collection.json\""
          
#           # Add folder flag if provided. Using -n check to avoid errors.
#           # if [ -n "${{ github.event.inputs.folder_name }}" ]; then
#           #   NEWMAN_CMD="${NEWMAN_CMD} --folder \"${{ github.event.inputs.folder_name }}\""
#           # fi
          
#           # Payload file path is now hardcoded as requested
#           NEWMAN_CMD="${NEWMAN_CMD} -d tests/payloads/testdata.json "
          
#           # Add global variables from user inputs
#           NEWMAN_CMD="${NEWMAN_CMD} --global-var api_url=${{ github.event.inputs.api_url }}"
#           NEWMAN_CMD="${NEWMAN_CMD} --global-var http_method=${{ github.event.inputs.http_method }}"
          
#           # Set the username and password as global variables
#           if [ -n "${{ github.event.inputs.username }}" ]; then
#             NEWMAN_CMD="${NEWMAN_CMD} --global-var username=${{ github.event.inputs.username }}"
#           fi
          
#           if [ -n "${{ github.event.inputs.password }}" ]; then
#             NEWMAN_CMD="${NEWMAN_CMD} --global-var password=${{ github.event.inputs.password }}"
#           fi
          
#           # Print the final command for debugging purposes
#           echo "Executing command: ${NEWMAN_CMD}"
          
#           # Run the final command
#           ${NEWMAN_CMD} --reporters cli,htmlextra --reporter-htmlextra-export results_report.html

#       - name: Upload HTML report artifact
#         # This conditional ensures the step always runs
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: api-test-report
#           path: results_report.html





